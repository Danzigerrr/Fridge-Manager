# Generated by Django 4.2.2 on 2023-06-20 17:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Fridge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Fridge name')),
                ('created_date', models.DateTimeField(verbose_name='Registration date in the system')),
                ('description', models.CharField(max_length=200, verbose_name='Details about the fridge')),
            ],
        ),
        migrations.CreateModel(
            name='FridgeUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=100, verbose_name='User email')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Product name')),
                ('expire_date', models.DateTimeField(verbose_name='Expiration date of the product')),
                ('amount', models.FloatField(verbose_name='Amount of the product stored')),
                ('description', models.CharField(blank=True, max_length=100, null=True, verbose_name='Details about the ingredient')),
                ('fridge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='fridge.fridge')),
            ],
        ),
        migrations.AddField(
            model_name='fridge',
            name='owners',
            field=models.ManyToManyField(blank=True, to='fridge.fridgeuser'),
        ),
    ]
